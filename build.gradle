/*
 * Copyright 2015 Karel H�bl <karel.huebl@gmail.com>.
 *
 * This file is part of disl.
 *
 * Disl is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Disl is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id "com.github.hierynomus.license" version "0.16.1"
    id 'idea'
    id 'groovy'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'signing'
}

project.group = 'com.neit'
project.version = "1.0.4"

sourceCompatibility = 1.8
targetCompatibility = 1.8

def nexusUrl = 'https://nexus.adwnowt.neit.cz//nexus/repository'
def nexusSnapshotUrl = "${nexusUrl}/adw-neit-snapshot/"
def nexusReleaseUrl = "${nexusUrl}/adw-neit-release/"

repositories {
    mavenLocal()
    maven {
        def releasesRepoUrl = nexusReleaseUrl
        def snapshotsRepoUrl = nexusSnapshotUrl
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        credentials {
            username = neitNexusReadUser
            password = neitNexusReadPassword
        }
    }
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy:3.0.10'
    implementation 'org.codehaus.groovy:groovy-json:3.0.10'
    implementation 'org.codehaus.groovy:groovy-sql:3.0.10'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'junit:junit:4.13.2'

    testImplementation 'org.codehaus.groovy:groovy-test:3.0.10'
    testImplementation 'org.hsqldb:hsqldb:2.3.2'

    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.36'
    testRuntimeOnly fileTree(dir: 'lib', include: '*.jar')
}

license {
    header rootProject.file('HEADER.txt')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    skipExistingHeaders = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier = 'javadoc'
    from groovydoc
}

artifacts {
    archives groovydocJar, sourcesJar
}

if (dislSigning) {
    signing {
        sign configurations.archives
    }
}

String getVersionName() {
    'git describe --tags'.execute(null, project.projectDir).text.trim()
}

java {
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = nexusReleaseUrl
            def snapshotsRepoUrl = nexusSnapshotUrl
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = neitNexusUser
                password = neitNexusPassword
            }
        }
    }
    publications {
        mavenDeployer(MavenPublication) {
            from components.java
            artifact(groovydocJar) {
                classifier = 'javadoc'
            }
            pom {
                name = 'dislNeit'
                description = 'disl = data integration specific language. Goal of this project is to implement groovy based domain specific language supporting modelling of data integration projects. Disl will support data modeling and data mapping including support for MDA transformations and unit testing.'
                url = 'https://github.com/neit-group/disl'
                signing {
                    sign publishing.publications.mavenDeployer
                }
                licenses {
                    license {
                        name = 'GNU GENERAL PUBLIC LICENSE, Version 3.0'
                        url = 'http://www.gnu.org/licenses/gpl.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        name = 'Milan Hertl'
                        email = 'milan.hertl@neit.group'
                        organization = 'Neit Consulting s.r.o.'
                        organizationUrl = 'https://www.neit.cz'
                    }
                    developer {
                        name = 'Erik Štofira'
                        email = 'erik.stofira@neit.group'
                        organization = 'Neit Consulting s.r.o.'
                        organizationUrl = 'https://www.neit.cz'
                    }
                }
                issueManagement {
                    system = 'JIRA'
                    url = 'https://neit.atlassian.net/jira/software/c/projects/ADWNEIT/boards/2'
                }
                scm {
                    connection = 'scm:git:git@github.com:neit-group/dislNeit.git'
                    developerConnection = 'scm:git:git@github.com:neit-group/dislNeit.git'
                    url = 'git@github.com:neit-group/dislNeit.git'
                }
            }
        }
    }
}